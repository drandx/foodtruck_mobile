// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using MonoTouch.CoreLocation;
using DInteractive.Core;

namespace ClickNDone.iOS
{
	public partial class PositionTrackerController : UIViewController
	{
		readonly CategoriesModel categoriesModel = (CategoriesModel)DependencyInjectionWrapper.Instance.ServiceContainer ().GetService (typeof(CategoriesModel));
		readonly UserModel userModel = (UserModel)DependencyInjectionWrapper.Instance.ServiceContainer ().GetService (typeof(UserModel));
		CLLocationManager LocMgr = new CLLocationManager();

		public PositionTrackerController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(false);
		}


		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			/*CLLocationManager locationManager = new CLLocationManager();
			locationManager.StartUpdatingLocation();
			locationManager.StartUpdatingHeading();

			locationManager.LocationsUpdated += async delegate(object sender , CLLocationsUpdatedEventArgs e )
			{
				foreach(CLLocation loc in e.Locations)
				{
					Console.WriteLine(loc.Coordinate.Latitude);
					Console.WriteLine(loc.Coordinate.Longitude);

					try 
					{
						await categoriesModel.PutCompanyAsync(userModel.Email, loc.Coordinate.Latitude, loc.Coordinate.Longitude);
					}
					catch(Exception exc) 
					{
						Console.WriteLine("Error on PutCompanyAsync - ViewDidLoad " + exc.Message);

					}

				}
			};*/

			if (CLLocationManager.LocationServicesEnabled) {
				LocMgr.StartMonitoringSignificantLocationChanges ();
			} else {
				Console.WriteLine ("Location services not enabled, please enable this in your Settings");
			}

			LocMgr.LocationsUpdated += async(o, e) => {
				Console.WriteLine ("Location change received - Lay: "+LocMgr.Location.Coordinate.Latitude+" - Long: "+LocMgr.Location.Coordinate.Longitude);
				try 
				{
					await categoriesModel.PutCompanyAsync(userModel.Email, LocMgr.Location.Coordinate.Latitude, LocMgr.Location.Coordinate.Longitude);
				}
				catch(Exception exc) 
				{
					Console.WriteLine("Error on PutCompanyAsync - ViewDidLoad " + exc.Message);

				}

			};

		}
	}
}
